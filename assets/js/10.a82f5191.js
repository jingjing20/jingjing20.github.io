(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(r,e,o){"use strict";o.r(e);var v=o(42),t=Object(v.a)({},(function(){var r=this,e=r.$createElement,o=r._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("ul",[o("li",[o("p",[r._v("JavaScript 语言采用的是单线程模型，也就是说，所有任务只能在一个线程上完成，一次只能做一件事。前面的任务没做完，后面的任务只能等着。随着电脑计算能力的增强，尤其是多核 CPU 的出现，单线程带来很大的不便，无法充分发挥计算机的计算能力。")])]),r._v(" "),o("li",[o("p",[r._v("在 HTML 页面中，如果在执行脚本时，页面的状态是不可相应的，直到脚本执行完成后，页面才变成可相应。web worker 是运行在后台的 js，独立于其他脚本，不会影响页面你的性能。并且通过 postMessage 将结果回传到主线程。这样在进行复杂操作的时候，就不会阻塞主线程了。")])]),r._v(" "),o("li",[o("p",[r._v("Web Worker 的作用，就是为 JavaScript 创造多线程环境，允许主线程创建 Worker 线程，将一些任务分配给后者运行。在主线程运行的同时，Worker 线程在后台运行，两者互不干扰。等到 Worker 线程完成计算任务，再把结果返回给主线程。这样的好处是，一些计算密集型或高延迟的任务，被 Worker 线程负担了，主线程（通常负责 UI 交互）就会很流畅，不会被阻塞或拖慢。")])]),r._v(" "),o("li",[o("p",[r._v("Worker 线程一旦新建成功，就会始终运行，不会被主线程上的活动（比如用户点击按钮、提交表单）打断。这样有利于随时响应主线程的通信。但是，这也造成了 Worker 比较耗费资源，不应该过度使用，而且一旦使用完毕，就应该关闭。")])])]),r._v(" "),o("p",[r._v("Web Worker 有以下几个使用注意点。")]),r._v(" "),o("p",[r._v("（1）同源限制")]),r._v(" "),o("p",[r._v("分配给 Worker 线程运行的脚本文件，必须与主线程的脚本文件同源。")]),r._v(" "),o("p",[r._v("（2）DOM 限制")]),r._v(" "),o("p",[r._v("Worker 线程所在的全局对象，与主线程不一样，无法读取主线程所在网页的 DOM 对象，也无法使用 document、window、parent 这些对象。但是，Worker 线程可以 navigator 对象和 location 对象。")]),r._v(" "),o("p",[r._v("（3）通信联系")]),r._v(" "),o("p",[r._v("Worker 线程和主线程不在同一个上下文环境，它们不能直接通信，必须通过消息完成。")]),r._v(" "),o("p",[r._v("（4）脚本限制")]),r._v(" "),o("p",[r._v("Worker 线程不能执行 alert()方法和 confirm()方法，但可以使用 XMLHttpRequest 对象发出 AJAX 请求。")]),r._v(" "),o("p",[r._v("（5）文件限制")]),r._v(" "),o("p",[r._v("Worker 线程无法读取本地文件，即不能打开本机的文件系统（file://），它所加载的脚本，必须来自网络。")])])}),[],!1,null,null,null);e.default=t.exports}}]);