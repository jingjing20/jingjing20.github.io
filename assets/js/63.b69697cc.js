(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{423:function(s,t,e){"use strict";e.r(t);var a=e(42),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"node-模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-模块化"}},[s._v("#")]),s._v(" node 模块化")]),s._v(" "),e("h2",{attrs:{id:"没有模块化带来的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#没有模块化带来的问题"}},[s._v("#")]),s._v(" 没有模块化带来的问题")]),s._v(" "),e("p",[s._v("早期没有模块化带来了很多的问题："),e("strong",[s._v("比如命名冲突的问题")])]),s._v(" "),e("p",[s._v("当然，我们有办法可以解决上面的问题：立即函数调用表达式（IIFE）IIFE (Immediately Invoked Function Expression) 但是，我们其实带来了新的问题：")]),s._v(" "),e("ul",[e("li",[s._v("第一，我必须记得每一个模块中返回对象的命名，才能在其他模块使用过程中正确的使用。")]),s._v(" "),e("li",[s._v("第二，代码写起来混乱不堪，每个文件中的代码都需要包裹在一个匿名函数中来编写。")]),s._v(" "),e("li",[s._v("第三，在没有合适的规范情况下，每个人、每个公司都可能会任意命名、甚至出现模块名称相同的情况。")])]),s._v(" "),e("h2",{attrs:{id:"commonjs-和-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-和-node"}},[s._v("#")]),s._v(" CommonJS 和 Node")]),s._v(" "),e("p",[e("strong",[s._v("我们需要知道CommonJS是一个规范，最初提出来是在浏览器以外的地方使用，并且当时被命名为 ServerJS，后来为了\n体现它的广泛性，修改为CommonJS，平时我们也会简称为CJS。")])]),s._v(" "),e("ul",[e("li",[s._v("Node 是 CommonJS 在服务器端一个具有代表性的实现")]),s._v(" "),e("li",[s._v("Browserify 是 CommonJS在浏览器中的一种实现。")]),s._v(" "),e("li",[s._v("webpack 打包工具具备对 CommonJS 的支持和转换。")])]),s._v(" "),e("p",[e("strong",[s._v("所以，Node中对CommonJS进行了支持和实现，让我们在开发node的过程中可以方便的进行模块化开发")])]),s._v(" "),e("ul",[e("li",[s._v("在Node中每一个js文件都是一个单独的模块。")]),s._v(" "),e("li",[s._v("这个模块中包括CommonJS规范的核心变量：exports、module.exports、require。")]),s._v(" "),e("li",[s._v("我们可以使用这些变量来方便的进行模块化开发。")])]),s._v(" "),e("p",[e("strong",[s._v("前面我们提到过模块化的核心是导出和导入，Node中对其进行了实现。")])]),s._v(" "),e("ul",[e("li",[s._v("exports和module.exports可以负责对模块中的内容进行导出。")]),s._v(" "),e("li",[s._v("require函数可以帮助我们导入其他模块（自定义模块、系统模块、第三方库模块）中的内容。")])]),s._v(" "),e("h2",{attrs:{id:"exports-和-require"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exports-和-require"}},[s._v("#")]),s._v(" exports 和 require")]),s._v(" "),e("h3",{attrs:{id:"exports-和-module-exports-与-require-的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exports-和-module-exports-与-require-的关系"}},[s._v("#")]),s._v(" exports 和 module.exports 与 require() 的关系")]),s._v(" "),e("ul",[e("li",[s._v("exports 就是一个对象，往外导出东西的时候直接可以往上面挂就可以了。for example：")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 就是一个模块")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1.模块内部定义东西")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jingjing'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" message "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my name is why"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sayHello")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello "')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过exports导出内容")]),s._v("\nexports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nexports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nexports"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sayHello "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sayHello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("ul",[e("li",[e("p",[s._v("CommonJS 中是没有 module.exports 的概念的；")])]),s._v(" "),e("li",[e("p",[s._v("但是为了实现模块的导出，Node 中使用的是 Module的 类，每一个模块都是 Module 的一个实例，也就是 module。")])]),s._v(" "),e("li",[e("p",[s._v("所以在 Node 中真正用于导出的其实根本不是 exports，而是 module.exports。")])]),s._v(" "),e("li",[e("p",[s._v("require() 和 exports 还有 module.exports 三个其实共同引用着同一个内存地址。但是当 module.exports 直接导出一个对象的时候，require() 就只能得到这个对象了，exports导出的东西就没有任何作用。（本质都是内存的知识）")])]),s._v(" "),e("li",[e("p",[s._v("其实真正负责导出东西的是 module.exports，而不是 exports。之所以 exports 也能向外导出东西是因为 node 在源码中执行了特殊处理，让 module.exports = exports。（这样做的原因就是兼容 CommonJS的特点）。")])])]),s._v(" "),e("h3",{attrs:{id:"require-函数的处理细节"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#require-函数的处理细节"}},[s._v("#")]),s._v(" require() 函数的处理细节")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("某个模块第一次使用 require() 函数引入的时候，模块中的代码会先加载一遍。")])]),s._v(" "),e("li",[e("p",[s._v("模块如果被多次引入的时候，只会加载一遍。因为每个模块对象 module 里面都有一个属性 loaded，为false表示还没有加载，为true则表示已经加载过了，就不会再重复加载了。")])]),s._v(" "),e("li",[e("p",[s._v("我们现在已经知道，require是一个函数，可以帮助我们引入一个文件（模块）中导入的对象。")])]),s._v(" "),e("li",[e("p",[s._v("那么，require的查找规则是怎么样的呢？https://nodejs.org/dist/latest-v14.x/docs/api/modules.html#modules_all_together")])])]),s._v(" "),e("p",[e("strong",[s._v("这里我总结比较常见的查找规则：导入格式如下：require(X)")])]),s._v(" "),e("p",[e("strong",[s._v("情况一：X是一个核心模块，比如 path、http")]),s._v("\n直接返回核心模块，并且停止查找。")]),s._v(" "),e("p",[e("strong",[s._v("情况二：X是以 ./ 或 ../ 或 /（根目录）开头的")])]),s._v(" "),e("ul",[e("li",[s._v("第一步：将X当做一个文件在对应的目录下查找。\n1.如果有后缀名，按照后缀名的格式查找对应的文件\n2.如果没有后缀名，会按照如下顺序：\n1> 直接查找文件X\n2> 查找X.js文件\n3> 查找X.json文件\n4> 查找X.node文件")]),s._v(" "),e("li",[s._v("第二步：没有找到对应的文件，将X作为一个目录，查找目录下面的index文件\n"),e("ol",[e("li",[s._v("查找X/index.js文件")]),s._v(" "),e("li",[s._v("查找X/index.json文件")]),s._v(" "),e("li",[s._v("查找X/index.node文件")])])]),s._v(" "),e("li",[s._v("如果没有找到，那么报错：not found")])]),s._v(" "),e("p",[e("strong",[s._v("情况三：直接是一个X（没有路径），并且X不是一个核心模块")])]),s._v(" "),e("ul",[e("li",[s._v("这时候会去当前文件的 module 对象上的 path 数组里面对应的node_modules里面找。")])]),s._v(" "),e("h2",{attrs:{id:"commonjs-规范缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范缺点"}},[s._v("#")]),s._v(" CommonJS 规范缺点")]),s._v(" "),e("h3",{attrs:{id:"commonjs-加载模块是同步的。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-加载模块是同步的。"}},[s._v("#")]),s._v(" CommonJS 加载模块是同步的。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("同步意味着只有等到引入的模块加载完了，才会执行当前模块的内容。")])]),s._v(" "),e("li",[e("p",[s._v("这个如果在服务器中不会有问题，因为服务器加载的js文件都是本地文件，加载速度非常快。")])])]),s._v(" "),e("h3",{attrs:{id:"在浏览器使用-commonjs-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在浏览器使用-commonjs-规范"}},[s._v("#")]),s._v(" 在浏览器使用 CommonJS 规范？")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("浏览器加载 js 文件需要先从服务器将文件下载下来，之后再加载运行。")])]),s._v(" "),e("li",[e("p",[s._v("那么采用同步的就意味着后续的js代码都无法正常运行，即使是一些简单的DOM操作。")])])]),s._v(" "),e("h3",{attrs:{id:"所以早期在浏览器中是不使用-commonjs-规范的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#所以早期在浏览器中是不使用-commonjs-规范的"}},[s._v("#")]),s._v(" 所以早期在浏览器中是不使用 CommonJS 规范的")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("在早期为了可以在浏览器中使用模块化，通常会采用AMD或CMD。")])]),s._v(" "),e("li",[e("p",[s._v("目前一方面现代的浏览器已经支持ES Modules，另一方面借助于 webpack 等打包工具可以实现对 CommonJS或者\nES Module代码的转换。所以现在AMD和CMD已经使用非常少了。")])])]),s._v(" "),e("h2",{attrs:{id:"模块化演变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化演变"}},[s._v("#")]),s._v(" 模块化演变")]),s._v(" "),e("h3",{attrs:{id:"amd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[s._v("#")]),s._v(" AMD")]),s._v(" "),e("ul",[e("li",[s._v("代表的有 require.js")])]),s._v(" "),e("h3",{attrs:{id:"cmd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[s._v("#")]),s._v(" CMD")]),s._v(" "),e("ul",[e("li",[s._v("代表的有 sea.js")])]),s._v(" "),e("h3",{attrs:{id:"es-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es-module"}},[s._v("#")]),s._v(" ES_Module")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("import 是一个关键字，只可以在代码加载（编译）过程中引入模块。")])]),s._v(" "),e("li",[e("p",[s._v("import() 是一个函数，可以在代码运行中引入模块。（动态加载）")])]),s._v(" "),e("li",[e("p",[s._v("采用ES Module将自动采用严格模式：use strict。")])]),s._v(" "),e("li",[e("p",[s._v("export {} 不是对象，只是特定的语法。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);