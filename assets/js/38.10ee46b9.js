(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{398:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、为什么要了解包含块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、为什么要了解包含块"}},[t._v("#")]),t._v(" 一、为什么要了解包含块？")]),t._v(" "),a("p",[t._v("一个元素的尺寸和位置经常受其包含块(containing block)的影响。对于一些属性，例如 width, height, padding, margin，绝对定位元素的偏移值 （比如 position 被设置为 absolute 或 fixed），当我们对其赋予百分比值时，这些值的计算值，就是通过元素的包含块计算得来。")]),t._v(" "),a("h2",{attrs:{id:"二、如何确定包含块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、如何确定包含块"}},[t._v("#")]),t._v(" 二、如何确定包含块？")]),t._v(" "),a("p",[a("strong",[t._v("确定一个元素的包含块的过程完全依赖于这个属性的 position 属性。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、如果 position 属性为 "),a("strong",[t._v("static 、 relative 、 sticky")]),t._v("，包含块可能由它的最近的祖先"),a("strong",[t._v("块元素")]),t._v("（比如说inline-block, block 或 list-item元素）的内容区的边缘组成，也可能会建立格式化上下文(比如说 a table container, flex container, grid container, 或者是 the block container 自身)。")])]),t._v(" "),a("li",[a("p",[t._v("2、如果 position 属性为 absolute ，包含块就是由它的最近的 position 的值不是 static （也就是值为fixed, absolute, relative 或 sticky）的祖先元素的内边距区的边缘组成。")])]),t._v(" "),a("li",[a("p",[t._v("3、如果 position 属性是 fixed，在连续媒体的情况下(continuous media)包含块是 viewport ,在分页媒体(paged media)下的情况下包含块是分页区域(page area)。")])]),t._v(" "),a("li",[a("p",[t._v("4、如果 position 属性是 absolute 或 fixed，包含块也可能是由满足以下条件的最近父级元素的内边距区的边缘组成的：")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" transform or perspective value other than none  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" will"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("change value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" transform or perspective  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" filter  value other than none or a will"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("change value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("only works on Firefox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v(" contain value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("paint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("例如"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" contain"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" paint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);