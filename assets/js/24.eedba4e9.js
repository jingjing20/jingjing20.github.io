(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{385:function(t,e,s){"use strict";s.r(e);var v=s(42),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"setstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate"}},[t._v("#")]),t._v(" setState")]),t._v(" "),s("ul",[s("li",[t._v("直接写 "),s("code",[t._v("setState")]),t._v(" 是一个异步的执行过程。")]),t._v(" "),s("li",[s("code",[t._v("setTimeout")]),t._v(" 中写 "),s("code",[t._v("setState")]),t._v(" 是一个同步的执行过程。")]),t._v(" "),s("li",[t._v("还有一些自定义 "),s("code",[t._v("DOM")]),t._v(" 事件中写 "),s("code",[t._v("setState")]),t._v(" 也是一个同步的执行过程。")])]),t._v(" "),s("h2",{attrs:{id:"函数组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数组件"}},[t._v("#")]),t._v(" 函数组件")]),t._v(" "),s("ul",[s("li",[t._v("纯函数，输入 props，输出 JSX。")]),t._v(" "),s("li",[t._v("没有实例，没有生命周期，没有 state。")]),t._v(" "),s("li",[t._v("不能扩展其他方法。")])]),t._v(" "),s("h2",{attrs:{id:"非受控组件使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非受控组件使用场景"}},[t._v("#")]),t._v(" 非受控组件使用场景")]),t._v(" "),s("ul",[s("li",[t._v("必须手动操作 DOM 元素，setState 实现不了的。")]),t._v(" "),s("li",[t._v("文件上传这种交互的 setState 实现不了。")]),t._v(" "),s("li",[t._v("某些富文本编辑器，需要传入 DOM 元素。")])]),t._v(" "),s("h3",{attrs:{id:"受控组件-vs-非受控组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#受控组件-vs-非受控组件"}},[t._v("#")]),t._v(" 受控组件 VS 非受控组件")]),t._v(" "),s("ul",[s("li",[t._v("优先使用受控组件，符合 React 设计原则。（数据驱动视图）")]),t._v(" "),s("li",[t._v("必须操作 DOM 时再使用非受控组件。")])]),t._v(" "),s("h2",{attrs:{id:"portals-使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#portals-使用场景"}},[t._v("#")]),t._v(" Portals 使用场景")]),t._v(" "),s("ul",[s("li",[t._v("父组件设置了一些像 overflow:hidden; 等触发 BFC 的属性，影响子组件的展示。")]),t._v(" "),s("li",[t._v("父组件 z-index 值太小。")]),t._v(" "),s("li",[t._v("fixed 需要放在 body 第一层级。")])]),t._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" context")]),t._v(" "),s("ul",[s("li",[t._v("设置一些公共信息（语言、主题、颜色之类的），可以在每个组件里使用。")]),t._v(" "),s("li",[t._v("用 props 感觉太繁琐。")]),t._v(" "),s("li",[t._v("用 Redux 又小题大做。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 Context 填入默认值（任何一个 js 变量）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ThemeContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'light'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h2",{attrs:{id:"异步组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步组件"}},[t._v("#")]),t._v(" 异步组件")]),t._v(" "),s("ul",[s("li",[t._v("React.lazy")]),t._v(" "),s("li",[t._v("React.Suspense")])]),t._v(" "),s("p",[s("code",[t._v("Suspense")]),t._v(" "),s("code",[t._v("使得组件可以“等待”某些操作结束后，再进行渲染。目前，Suspense")]),t._v(" 仅支持的使用场景是：通过 "),s("code",[t._v("React.lazy")]),t._v(" 动态加载组件。它将在未来支持其它使用场景，如数据获取等。")]),t._v(" "),s("h2",{attrs:{id:"scu-使用总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scu-使用总结"}},[t._v("#")]),t._v(" SCU 使用总结")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("SCU")]),t._v(" 默认返回 "),s("code",[t._v("true")]),t._v(" ，即 "),s("code",[t._v("React")]),t._v(" 默认重新渲染所有子组件。")]),t._v(" "),s("li",[t._v("当 "),s("code",[t._v("props")]),t._v(" 或 "),s("code",[t._v("state")]),t._v(" 发生变化时，"),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 会在渲染执行之前被调用。返回值默认为 "),s("code",[t._v("true")]),t._v("。首次渲染或使用 "),s("code",[t._v("forceUpdate()")]),t._v(" 时不会调用该方法。")]),t._v(" "),s("li",[t._v("不建议在 "),s("code",[t._v("shouldComponentUpdate()")]),t._v(" 中进行深层比较或使用 "),s("code",[t._v("JSON.stringify()")]),t._v("。这样非常影响效率，且会损害性能。")]),t._v(" "),s("li",[t._v("此方法仅作为性能优化的方式而存在。不要企图依靠此方法来“阻止”渲染，因为这可能会产生 "),s("code",[t._v("bug")]),t._v("。你应该考虑使用内置的 "),s("code",[t._v("PureComponent")]),t._v(" 组件，而不是手动编写 "),s("code",[t._v("shouldComponentUpdate()")]),t._v("。"),s("code",[t._v("PureComponent")]),t._v(" 会对 "),s("code",[t._v("props")]),t._v(" 和 "),s("code",[t._v("state")]),t._v(" 进行浅层比较，并减少了跳过必要更新的可能性。")])]),t._v(" "),s("h2",{attrs:{id:"purecomponent-和-memo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent-和-memo"}},[t._v("#")]),t._v(" PureComponent 和 memo")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("PureComponent")]),t._v(" 其实就是在 SCU 中实现了浅比较。")]),t._v(" "),s("li",[s("code",[t._v("memo")]),t._v(" 函数组件中的 "),s("code",[t._v("PureComponent")]),t._v("。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);