(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{370:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、原始数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、原始数据类型"}},[t._v("#")]),t._v(" 一、原始数据类型")]),t._v(" "),a("ul",[a("li",[t._v("boolean")]),t._v(" "),a("li",[t._v("string")]),t._v(" "),a("li",[t._v("number")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("bigint (提案中)")]),t._v(" "),a("li",[t._v("symbol (ES6 引入表示独一无二的值)")])]),t._v(" "),a("h2",{attrs:{id:"二、引用数据类型-对象-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、引用数据类型-对象-object"}},[t._v("#")]),t._v(" 二、引用数据类型(对象 Object)")]),t._v(" "),a("ul",[a("li",[t._v("普通对象 Object")]),t._v(" "),a("li",[t._v("数组对象 Array")]),t._v(" "),a("li",[t._v("正则对象 RegExp")]),t._v(" "),a("li",[t._v("日期对象 Date")]),t._v(" "),a("li",[t._v("数学函数 Math")]),t._v(" "),a("li",[t._v("函数对象 Function")])]),t._v(" "),a("h2",{attrs:{id:"三、为什么-typeof-null-结果是-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、为什么-typeof-null-结果是-object"}},[t._v("#")]),t._v(" 三、为什么 typeof(null) 结果是 object？")]),t._v(" "),a("p",[t._v("解释: 虽然 typeof null 会输出 object，但是这只是 JS 存在的一个悠久 Bug。"),a("strong",[a("em",[t._v("在 JS 的最初版本中使用的是 32 位系统，为了性能考虑")])]),t._v(" 使用低位存储变量的类型信息， "),a("strong",[a("em",[t._v("000 开头代表是对象")])]),t._v(" 然而 null 表示为全零，所以将它错误的判断为 object 。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("面试题")]),t._v(" "),a("p",[t._v("用 "),a("code",[t._v("typeof(jing) === 'object'")]),t._v(" 来判断 "),a("code",[t._v("jing")]),t._v(" 是不是 "),a("code",[t._v("object")]),t._v(" 有没有风险？为什么？")])]),t._v(" "),a("h2",{attrs:{id:"四、js-隐式类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、js-隐式类型转换"}},[t._v("#")]),t._v(" 四、js 隐式类型转换")]),t._v(" "),a("p",[t._v("JavaScript 提供三种不同的值比较操作：")]),t._v(" "),a("ul",[a("li",[t._v('严格相等 ("triple equals" 或 "identity")，使用 === ,')]),t._v(" "),a("li",[t._v('宽松相等 ("double equals") ，使用 ==')]),t._v(" "),a("li",[t._v("以及 Object.is （ECMAScript 2015/ ES6 新特性）")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("注意注意")]),t._v(" "),a("p",[t._v("Object.is（NaN，NaN）将为 true")])]),t._v(" "),a("h3",{attrs:{id:"与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与"}},[t._v("#")]),t._v(" == 与 ===")]),t._v(" "),a("p",[a("strong",[t._v("相等和不相等——先转换再比较 （==）")]),a("br"),t._v(" "),a("strong",[t._v("全等和不全等——仅比较而不转换 （===）")]),a("br"),t._v("\nECMAScript 中相等操作符由两个等于号（==）表示，如果两个操作数相等，则返回 true，这种操作符都会先转换操作数（通常称为强制转型），然后再比较它们的相等性")]),t._v(" "),a("p",[t._v("在转换不同的数据类型时，对于相等和不相等操作符：在 JS 高级程序设计中给出如下的基本转换规则")]),t._v(" "),a("ul",[a("li",[t._v("如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值 "),a("code",[t._v("false")]),t._v(" 转换为 0，而 "),a("code",[t._v("true")]),t._v(" 转换为 1。")]),t._v(" "),a("li",[t._v("如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值。")]),t._v(" "),a("li",[t._v("如果一个操作数是对象，另一个操作数不是，则调用对象的 "),a("code",[t._v("valueOf()")]),t._v(" 方法，用得到的基本类型值按照前面的规则进行比较。")])]),t._v(" "),a("p",[a("strong",[t._v("这两个操作符在进行比较时则要遵循下列规则。")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 是相等的")]),t._v(" "),a("li",[t._v("要比较相等性之前，不能将 "),a("code",[t._v("null")]),t._v(" 和 "),a("code",[t._v("undefined")]),t._v(" 转换成其他任何值")]),t._v(" "),a("li",[t._v("如果有一个操作数是 "),a("code",[t._v("NaN")]),t._v("，则相等操作符返回 "),a("code",[t._v("false")]),t._v(" ，而不相等操作符返回 "),a("code",[t._v("true")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("重要提示：")]),t._v(" 即使两个操作数都是 "),a("code",[t._v("NaN")]),t._v("，相等操作符也返回 "),a("code",[t._v("false")]),t._v(" 了；因为按照规则， "),a("code",[t._v("NaN")]),t._v(" 不等于 "),a("code",[t._v("NaN")]),t._v("。")]),t._v(" "),a("li",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象，如果两个操作数都指向同一个对象，则相等操作符返回 "),a("code",[t._v("true")]),t._v(" ，否则返回 false")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("注意点")]),t._v(" "),a("p",[t._v('false、0、空字符串（""）、NaN、null 和 undefined 被转换为 false\n所有其他值被转换为 true')])]),t._v(" "),a("h3",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[t._v("#")]),t._v(" 题目")]),t._v(" "),a("p",[a("strong",[t._v("1、[] == ! [] 的结果为什么会是 true")])]),t._v(" "),a("p",[t._v("①、根据运算符优先级 ，！ 的优先级是大于 == 的，所以先会执行 ![]")]),t._v(" "),a("p",[a("strong",[a("em",[t._v("！可将变量转换成 boolean 类型，null、undefined、NaN 以及空字符串('')取反都为 true，其余都为 false。")])])]),t._v(" "),a("p",[t._v("所以 ! [] 运算后的结果就是 false")]),t._v(" "),a("p",[t._v("也就是 [] == ! [] 相当于 [] == false")]),t._v(" "),a("p",[t._v("②、根据上面提到的规则（如果有一个操作数是布尔值，则在比较相等性之前先将其转换为数值——false 转换为 0，而 true 转换为 1），则需要把 false 转成 0")]),t._v(" "),a("p",[t._v("也就是 [] == ! [] 相当于 [] == false 相当于 [] == 0")]),t._v(" "),a("p",[t._v("③、根据上面提到的规则（如果一个操作数是对象，另一个操作数不是，则调用对象的 valueOf()方法，用得到的基本类型值按照前面的规则进行比较，如果对象没有 valueOf()方法，则调用 toString()）")]),t._v(" "),a("p",[t._v("而对于空数组，[].toString() -> '' (返回的是空字符串)")]),t._v(" "),a("p",[t._v("也就是 [] == 0 相当于 '' == 0")]),t._v(" "),a("p",[t._v("④、根据上面提到的规则（如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值）")]),t._v(" "),a("p",[t._v("Number('') -> 返回的是 0")]),t._v(" "),a("p",[t._v("相当于 0 == 0 自然就返回 true 了")]),t._v(" "),a("p",[a("strong",[t._v("2、null === null")])]),t._v(" "),a("h3",{attrs:{id:"mdn-对比图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mdn-对比图"}},[t._v("#")]),t._v(" MDN 对比图")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://image.jinghao.xyz/blog/20200601/yHs670dUzalt.png",alt:"mark"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"http://image.jinghao.xyz/blog/20200601/0woxYIeahVnr.png",alt:"mark"}})]),t._v(" "),a("h2",{attrs:{id:"五、null-和-undefined-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、null-和-undefined-的区别"}},[t._v("#")]),t._v(" 五、null 和 undefined 的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("null")]),t._v(" 表示一个 "),a("code",[t._v('"无"')]),t._v(" 的对象，也就是该处不应该有值；而 "),a("code",[t._v("undefined")]),t._v(" 表示未定义。")]),t._v(" "),a("li",[t._v("在转换为数字时结果不同，"),a("code",[t._v("Number(null)")]),t._v(" 为 0，而 "),a("code",[t._v("undefined")]),t._v(" 为 "),a("code",[t._v("NaN")]),t._v("。")])]),t._v(" "),a("p",[t._v("使用场景上：")]),t._v(" "),a("p",[a("code",[t._v("null：")])]),t._v(" "),a("ul",[a("li",[t._v("作为函数的参数，表示该函数的参数不是对象。")]),t._v(" "),a("li",[t._v("作为对象原型链的终点。")])]),t._v(" "),a("p",[a("code",[t._v("undefined:")])]),t._v(" "),a("ul",[a("li",[t._v("变量被声明了，但没有赋值时，就等于 undefined。")]),t._v(" "),a("li",[t._v("对象没有赋值属性，该属性的值为 undefined。")]),t._v(" "),a("li",[t._v("函数没有返回值时，默认返回 undefined。")])]),t._v(" "),a("h2",{attrs:{id:"六、0-1-0-2-0-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、0-1-0-2-0-3"}},[t._v("#")]),t._v(" 六、0.1 + 0.2 === 0.3?")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript 的 Number 类型使用的是双精度浮点型。")]),t._v(" "),a("li",[t._v("在 JS 中 0.1 和 0.2 都是偏大的，所以 0.1 + 0.2 > 0.3。")])]),t._v(" "),a("h3",{attrs:{id:"解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法：")]),t._v(" "),a("p",[a("strong",[t._v("toFixed")])]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("JavaScript")]),t._v(" 原生方法中提供了一个方法："),a("code",[t._v("Number.prototype.toFixed()")]),t._v(" "),a("code",[t._v("toFixed()")]),t._v(" 方法使用定点表示法来格式化一个数\n语法如下：")]),t._v(" "),a("p",[a("code",[t._v("numObj.toFixed(digits)")])]),t._v(" "),a("p",[t._v("其中参数 "),a("code",[t._v("digits")]),t._v(" 是小数点后数字的个数：介于 0 到 20 之间。\n返回的是一个数值的字符串形式，所以需要将结果强制转换为浮点型。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为0.3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果为126")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 0.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 970")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.22")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为 2.32")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("计算机中使用 IEEE754 标准实现的浮点型存储都会有这个问题：")]),t._v(" "),a("p",[t._v("用二进制来存储小数，而大部分小数转成二进制之后都是无限循环的值，因此存在取舍问题，也就是精度丢失。\n从而使得 0.1 + 0.2 !== 0.3。")]),t._v(" "),a("h2",{attrs:{id:"object-assign-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-详解"}},[t._v("#")]),t._v(" Object.assign()详解")]),t._v(" "),a("h3",{attrs:{id:"object-assign-方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象-返回的是目标对象。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象-返回的是目标对象。"}},[t._v("#")]),t._v(" Object.assign() 方法用于将所有可枚举属性的值从一个或多个源对象复制到目标对象，返回的是目标对象。")]),t._v(" "),a("ul",[a("li",[t._v("如果目标对象中的属性具有相同的键，则属性将被源对象中的属性覆盖。后面的源对象的属性将类似地覆盖前面的源对象的属性。")])]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("Object.assign 不会在那些 source 对象值为 null 或 undefined 的时候抛出错误。")])]),t._v(" "),a("h3",{attrs:{id:"拷贝问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拷贝问题"}},[t._v("#")]),t._v(" 拷贝问题")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Object.assign() 不是深拷贝。因为 Object.assign() 拷贝的是（可枚举）属性值。")])]),t._v(" "),a("li",[a("p",[t._v("假如源对象中的某个值是一个对象的引用，它仅仅会复制它的引用值。")])]),t._v(" "),a("li",[a("p",[t._v("原始类型会被包装为对象")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始类型会被包装，null 和 undefined 会被忽略。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，只有字符串的包装对象才可能有自身可枚举属性。")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// { "0": "a", "1": "b", "2": "c" }')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);